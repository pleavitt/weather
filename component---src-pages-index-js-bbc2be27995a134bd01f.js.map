{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["IndexPage","props","_this","_React$Component","call","this","state","componentDidMount","_this2","fetch","then","data","json","result","console","log","setState","Object","assign","catch","error","render","name","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","_this$state","_this$state$main","main","temp","temp_min","temp_max","humidity","weather","sys","className","country","description","id","Math","round","React","Component","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","propTypes","PropTypes","shape","string","isRequired","SEO","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","arrayOf","object","StaticQueryContext","createContext","StaticQuery","react_default","Consumer","staticQueryData","query","children","func","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","gatsby_link_default","to","color","textDecoration","Layout","gatsby_browser_entry_StaticQuery","Fragment","header","paddingTop","Date","getFullYear","_755544856","node","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","match","e"],"mappings":"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","file":"component---src-pages-index-js-bbc2be27995a134bd01f.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport \"../css/weather-icons.min.css\"\n// import { getWeather } from \"../lib/api\"\n\nclass IndexPage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n  componentDidMount() {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/weather?q=Brisbane,AU&units=metric&APPID=82f64da34251b0e58e057d344f3307a1\"\n    )\n      .then(data => data.json())\n      .then(result => {\n        console.log(result)\n        this.setState({ ...result })\n      })\n      .catch(error => console.error(error))\n  }\n\n  render() {\n    if (!this.state.name) {\n      return (\n        <Layout>\n          <SEO title=\"Home\" />\n          <h1>Loading...</h1>\n        </Layout>\n      )\n    }\n    const {\n      main: { temp, temp_min, temp_max, humidity },\n      weather,\n      name,\n      sys,\n    } = this.state\n    return (\n      <Layout>\n        <SEO title=\"Home\" />\n\n        <div className=\"max-w-sm rounded shadow-lg bg-purple-100 mb-10\">\n          <h2 className=\"text-gray-800 text-2xl font-sans pl-3 pt-3\">\n            {name}, {sys.country}\n          </h2>\n          <h2 className=\"text-gray-600 text-2xl pl-3 font-sans\">\n            {weather[0].description}\n          </h2>\n\n          <div className=\"flex flex-row px-6 py-4 justify-between pb-10\">\n            <i\n              className={`text-indigo-500 text-5xl wi wi-owm-${weather[0].id}`}\n            />\n            <div className=\"flex\">\n              <div className=\"text-indigo-700 text-6xl font-bold self-center font-sans\">\n                {Math.round(temp)}\n              </div>\n              <div className=\"text-indigo-700 text-xl font-bold self-start font-sans\">\n                °C\n              </div>\n            </div>\n          </div>\n          <div className=\"flex flex-row px-6 py-4 justify-between\">\n            <div className=\"text-gray-500\">LOW</div>\n            <div className=\"text-indigo-700 font-bold text-xl self-center font-sans\">\n              {Math.round(temp_min)}°C\n            </div>\n          </div>\n          <div className=\"flex flex-row px-6 py-4 justify-between\">\n            <div className=\"text-gray-500\">HIGH</div>\n            <div className=\"text-indigo-700 font-bold text-xl self-center font-sans\">\n              {Math.round(temp_max)}°C\n            </div>\n          </div>\n\n          <div className=\"flex flex-row px-6 py-4 justify-between pb-10\">\n            <div className=\"text-gray-500\">HUMIDITY</div>\n            <div className=\"text-indigo-700 font-bold text-xl self-center font-sans\">\n              {humidity}%\n            </div>\n          </div>\n        </div>\n\n        {/* <h3>Sunrise is at: {new Date(sys.sunrise).toTimeString()}</h3>\n      <h3>Sunset is at: {new Date(sys.sunset).toTimeString()}</h3> */}\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          <div className=\"text-center\">{siteTitle}</div>\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n          <main>{children}</main>\n          <footer>© {new Date().getFullYear()}, Built By Paul Leavitt</footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}